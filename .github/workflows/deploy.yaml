name: Deploy
run-name: Deploy on ${{ github.ref_name }}

on:
  push:
    branches:
      - master
      - develop

concurrency:
  group: deploy-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    # if: github.actor == 'github-actions[bot]'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          submodules: 'recursive'
          ssh-key: ${{ secrets.SSH_GITHUB_KEY }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        env:
          PROJECT_TYPE: ${{ contains(github.event.head_commit.message, 'frontend') && 'frontend' || 'backend' }}
        with:
          push: true
          context: ${{ env.PROJECT_TYPE }}
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/wink-official-${{ env.PROJECT_TYPE }}:${{ github.ref_name }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/wink-official-${{ env.PROJECT_TYPE }}:buildcache-${{ github.ref_name }}
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/wink-official-${{ env.PROJECT_TYPE }}:buildcache-${{ github.ref_name }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      SSH_HOST: ${{ github.ref_name == 'master' && secrets.SSH_MASTER_HOST || secrets.SSH_DEVELOP_HOST }}
      SSH_USERNAME: ${{ github.ref_name == 'master' && secrets.SSH_MASTER_USERNAME || secrets.SSH_DEVELOP_USERNAME }}
      SSH_KEY: ${{ github.ref_name == 'master' && secrets.SSH_MASTER_KEY || secrets.SSH_DEVELOP_KEY }}
    steps:
      - name: Check infrastructure
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ env.SSH_KEY }}
          script: |
            if ! command -v docker &> /dev/null; then
              echo "Error: Docker is not installed." >&2
              exit 1
            fi
  
            if [ ! -f "$HOME/.ssh/id_ed25519" ]; then
              echo "${{ secrets.SSH_GITHUB_KEY }}" > "$HOME/.ssh/id_ed25519"
              chmod 600 "$HOME/.ssh/id_ed25519"
              ssh-keyscan github.com >> "$HOME/.ssh/known_hosts"
            fi
  
            if [ ! -d "wink-official-deploy" ]; then
              git clone git@github.com:kmu-wink/wink-official-deploy.git
            fi
  
            if [ ! -d "$HOME/wink-official-deploy/deploy" ]; then
              echo "Error: deploy directory does not exist." >&2
              exit 1
            fi

      - name: Pull repository
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ env.SSH_KEY }}
          script: |
            cd wink-official-deploy
            [ "$(git symbolic-ref --short HEAD)" != "${{ github.ref_name }}" ] && git checkout ${{ github.ref_name }}
            git pull origin ${{ github.ref_name }}

      - name: Run container
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ env.SSH_KEY }}
          script: |
            cd wink-official-deploy
            docker compose pull
            docker compose down
            docker compose up -d
